name: CI/CD Pipeline for SynapticIDS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GCP_REGION: southamerica-east1
  GCP_PROJECT_ID: synapticids
  ARTIFACT_REGISTRY: synapticids-repo
  GKE_CLUSTER: synapticids-cluster
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pytest
          pip install -e .

      - name: Lint with Pylint
        run: |
          pylint src/

      - name: Test with Pytest
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          pytest

  build-and-push-to-gcr:
      name: Build and Push to Artifact Registry
      needs: build-and-test
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Authenticate to Google Cloud
          uses: google-github-actions/auth@v1
          with:
            workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
            service_account: ${{ secrets.GCP_SA_EMAIL }}

        - name: Configure Docker for Artifact Registry
          run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

        - name: Build and push Docker image
          run: |
            IMAGE_TAG=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/synaptic-ids:${{ github.sha }}
            docker build -t $IMAGE_TAG .
            docker push $IMAGE_TAG

  deploy-to-gke:
      name: Deploy to GKE
      needs: build-and-push-to-gcr
      runs-on: ubuntu-latest
      permissions:
        contents: 'read'
        id-token: 'write'

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Authenticate to Google Cloud
          uses: google-github-actions/auth@v1
          with:
            workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
            service_account: ${{ secrets.GCP_SA_EMAIL }}

        - name: Get GKE credentials
          uses: google-github-actions/get-gke-credentials@v1
          with:
            cluster_name: ${{ env.GKE_CLUSTER }}
            location: ${{ env.GCP_REGION }}
            project_id: ${{ env.GCP_PROJECT_ID }}

        - name: Deploy to GKE
          run: |
            sed -i 's|image: .*|image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY }}/synaptic-ids:${{ github.sha }}|g' k8s/deployment.yml
            kubectl apply -f k8s/
